services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: weatherdb
      POSTGRES_USER: weatheruser
      POSTGRES_PASSWORD: weatherpass
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U weatheruser -d weatherdb"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: ./app/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://weatheruser:weatherpass@postgres:5432/weatherdb
      - REDIS_URL=redis://redis:6379
      - NODE_ENV=production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  worker:
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    environment:
      - DATABASE_URL=postgresql://weatheruser:weatherpass@postgres:5432/weatherdb
      - REDIS_URL=redis://redis:6379
      - NODE_ENV=production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  producer:
    build:
      context: .
      dockerfile: ./producer/Dockerfile
    environment:
      - REDIS_URL=redis://redis:6379
      - NODE_ENV=production
    depends_on:
      redis:
        condition: service_healthy

volumes:
  postgres_data:
